#!/command/with-contenv sh

## Defaults

SCRIPT_NAME="mc-custom-settings"

env_delimiter="MC_"
properties_file="server.properties"
exit_code_restart="8"

## Main

# Wait until file exists
printf -- '%s: info: checking %s\n' "${SCRIPT_NAME}" "${properties_file}"
until [ -f "${DATA_DIR}/${properties_file}" ]
do
  sleep 0.5
done

# Copy temp file
cp "${DATA_DIR}/${properties_file}" "/tmp/${properties_file}"

# Foreach env variable that starts with $env_delimiter, set its value
printf -- '%s: info: parsing custom properties\n' "${SCRIPT_NAME}"
env | while IFS= read -r line; do

  # Get env name
  env_name=${line%%=*}

  # If env name starts with $env_delimiter
  if [ "${env_name}" != "${env_name#${env_delimiter}}" ]; then

    # Get option name
    # remove env_delimiter, replace '_' with '-' and converts upper to lower case
    option_name=$(printf -- "%s\n" "${env_name#${env_delimiter}}" | tr '_' '-' | tr '[:upper:]' '[:lower:]')

    # Get option value
    option_value=${line#*=}

    # Create regexp and replacement for sed
    regexp="^${option_name}=.*$"
    replacement="${option_name}=${option_value}"

    # If option already set, skip
    if ! grep -q "^${replacement}$" "${DATA_DIR}/${properties_file}"; then

      # Set given option inside file
      printf -- '%s: info: setting option %s\n' "${SCRIPT_NAME}" "${replacement}"
      sed -i "s/${regexp}/${replacement}/g" "${DATA_DIR}/${properties_file}"

    fi
  fi
done

# Set default value for restart
restart=false

# If there are differences between before and after, restart service
if ! cmp -s "${DATA_DIR}/${properties_file}" "/tmp/${properties_file}"; then

  # Set restart to true
  restart=true

else

  printf -- '%s: info: no custom option was set\n' "${SCRIPT_NAME}"

fi

# Remove temp file
rm -f "/tmp/${properties_file}"

# If restart is needed, return special exit code
if [ "${restart}" = "true" ]; then

  # Exit value "exit_code_restart" means restart is required
  return ${exit_code_restart}

fi
